name: Go

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platforms: [linux/amd64, linux/arm, linux/arm64, windows/amd64]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Build
        run: GOOS=$(echo '${{ matrix.platforms }}' | cut -d'/' -f1) GOARCH=$(echo '${{ matrix.platforms }}' | cut -d'/' -f2)  go build -o fritzbox_exporter-$(echo '${{ matrix.platforms }}' | cut -d'/' -f1)-$(echo '${{ matrix.platforms }}' | cut -d'/' -f2)
      - uses: actions/upload-artifact@v2
        with:
          name: fritzbox_exporter
          path: fritzbox_exporter*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: jungwinter/split@v1
        id: split
        with:
          seperator: /
          msg: ${{ matrix.platforms }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./fritzbox_exporter-${{ steps.split.outputs._1 }}${{ steps.split.outputs._2 }}
          asset_name: fritzbox_exporter-${{ steps.split.outputs._1 }}${{ steps.split.outputs._2 }}
          asset_content_type: application/octet-stream